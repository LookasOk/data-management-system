<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="3" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="newGrouTests" duration-ms="6110" started-at="2020-03-24T07:06:21Z" finished-at="2020-03-24T07:06:27Z">
    <groups>
      <group name="createGroup">
        <method signature="NewGroupTests.createGroupTest(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:test.NewGroupTests@4dfa3a9d]" name="createGroupTest" class="test.NewGroupTests"/>
        <method signature="NewGroupTests.groupWithoutNameTest()[pri:0, instance:test.NewGroupTests@4dfa3a9d]" name="groupWithoutNameTest" class="test.NewGroupTests"/>
        <method signature="NewGroupTests.userInGroupTest(java.lang.String, java.lang.String)[pri:2, instance:test.NewGroupTests@4dfa3a9d]" name="userInGroupTest" class="test.NewGroupTests"/>
      </group> <!-- createGroup -->
    </groups>
    <test name="newGroupTests" duration-ms="6110" started-at="2020-03-24T07:06:21Z" finished-at="2020-03-24T07:06:27Z">
      <class name="test.NewGroupTests">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:test.NewGroupTests@4dfa3a9d]" name="beforeSuite" is-config="true" duration-ms="10941" started-at="2020-03-24T07:06:10Z" finished-at="2020-03-24T07:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="preconitions()[pri:0, instance:test.NewGroupTests@4dfa3a9d]" name="preconitions" is-config="true" duration-ms="67" started-at="2020-03-24T07:06:21Z" finished-at="2020-03-24T07:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preconitions -->
        <test-method status="PASS" signature="login(java.lang.String, java.lang.String)[pri:0, instance:test.NewGroupTests@4dfa3a9d]" name="login" is-config="true" duration-ms="319" started-at="2020-03-24T07:06:21Z" finished-at="2020-03-24T07:06:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[adminadmin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="groupWithoutNameTest()[pri:0, instance:test.NewGroupTests@4dfa3a9d]" name="groupWithoutNameTest" duration-ms="1359" started-at="2020-03-24T07:06:22Z" finished-at="2020-03-24T07:06:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- groupWithoutNameTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.NewGroupTests@4dfa3a9d]" name="afterTest" is-config="true" duration-ms="219" started-at="2020-03-24T07:06:23Z" finished-at="2020-03-24T07:06:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="createGroupTest(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:test.NewGroupTests@4dfa3a9d]" name="createGroupTest" duration-ms="2450" started-at="2020-03-24T07:06:23Z" finished-at="2020-03-24T07:06:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ProjectManagers]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Project managers who manage projects that need managing by the managers.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createGroupTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.NewGroupTests@4dfa3a9d]" name="afterTest" is-config="true" duration-ms="186" started-at="2020-03-24T07:06:26Z" finished-at="2020-03-24T07:06:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="userInGroupTest(java.lang.String, java.lang.String)[pri:2, instance:test.NewGroupTests@4dfa3a9d]" name="userInGroupTest" duration-ms="1041" started-at="2020-03-24T07:06:26Z" finished-at="2020-03-24T07:06:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ProjectManagers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userInGroupTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.NewGroupTests@4dfa3a9d]" name="afterTest" is-config="true" duration-ms="207" started-at="2020-03-24T07:06:27Z" finished-at="2020-03-24T07:06:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="logout()[pri:0, instance:test.NewGroupTests@4dfa3a9d]" name="logout" is-config="true" duration-ms="126" started-at="2020-03-24T07:06:27Z" finished-at="2020-03-24T07:06:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method status="PASS" signature="deleteGroupCreatedForTest(java.lang.String)[pri:0, instance:test.NewGroupTests@4dfa3a9d]" name="deleteGroupCreatedForTest" is-config="true" duration-ms="106" started-at="2020-03-24T07:06:27Z" finished-at="2020-03-24T07:06:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ProjectManagers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteGroupCreatedForTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:test.NewGroupTests@4dfa3a9d]" name="afterSuite" is-config="true" duration-ms="683" started-at="2020-03-24T07:06:28Z" finished-at="2020-03-24T07:06:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.NewGroupTests -->
    </test> <!-- newGroupTests -->
  </suite> <!-- newGrouTests -->
</testng-results>
