<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="2" total="14" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="regressionTests" duration-ms="16529" started-at="2020-02-20T08:41:16Z" finished-at="2020-02-20T08:41:33Z">
    <groups>
      <group name="brokenLinks">
        <method signature="BrokenLinksTest.brokeButtonsTest()[pri:0, instance:test.BrokenLinksTest@204f30ec]" name="brokeButtonsTest" class="test.BrokenLinksTest"/>
        <method signature="BrokenLinksTest.brokenLinksTest()[pri:1, instance:test.BrokenLinksTest@204f30ec]" name="brokenLinksTest" class="test.BrokenLinksTest"/>
      </group> <!-- brokenLinks -->
      <group name="createGroup">
        <method signature="NewGroupTests.createGroupTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.NewGroupTests@57fffcd7]" name="createGroupTest" class="test.NewGroupTests"/>
        <method signature="NewGroupTests.groupWithoutNameTest()[pri:1, instance:test.NewGroupTests@57fffcd7]" name="groupWithoutNameTest" class="test.NewGroupTests"/>
        <method signature="NewGroupTests.userInGroupTest(java.lang.String, java.lang.String)[pri:2, instance:test.NewGroupTests@57fffcd7]" name="userInGroupTest" class="test.NewGroupTests"/>
      </group> <!-- createGroup -->
      <group name="newDocType">
        <method signature="NewDocTypeTests.createNewDocTypeTest(java.lang.String, java.lang.String)[pri:0, instance:test.NewDocTypeTests@589838eb]" name="createNewDocTypeTest" class="test.NewDocTypeTests"/>
        <method signature="NewDocTypeTests.docTypeGroupsTest(java.lang.String)[pri:2, instance:test.NewDocTypeTests@589838eb]" name="docTypeGroupsTest" class="test.NewDocTypeTests"/>
        <method signature="NewDocTypeTests.docTypeNoNameTest()[pri:1, instance:test.NewDocTypeTests@589838eb]" name="docTypeNoNameTest" class="test.NewDocTypeTests"/>
      </group> <!-- newDocType -->
      <group name="loginTests">
        <method signature="loginTests.adminLoginTest(java.lang.String, java.lang.String)[pri:2, instance:test.loginTests@523884b2]" name="adminLoginTest" class="test.loginTests"/>
        <method signature="loginTests.emptyLoginFieldsTest()[pri:0, instance:test.loginTests@523884b2]" name="emptyLoginFieldsTest" class="test.loginTests"/>
        <method signature="loginTests.userLoginTest(java.lang.String, java.lang.String)[pri:3, instance:test.loginTests@523884b2]" name="userLoginTest" class="test.loginTests"/>
        <method signature="loginTests.wrongLoginTest(java.lang.String, java.lang.String)[pri:1, instance:test.loginTests@523884b2]" name="wrongLoginTest" class="test.loginTests"/>
      </group> <!-- loginTests -->
    </groups>
    <test name="loginTests" duration-ms="3384" started-at="2020-02-20T08:41:16Z" finished-at="2020-02-20T08:41:20Z">
      <class name="test.loginTests">
        <test-method status="PASS" signature="preconditions()[pri:0, instance:test.loginTests@523884b2]" name="preconditions" is-config="true" duration-ms="47" started-at="2020-02-20T08:41:16Z" finished-at="2020-02-20T08:41:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preconditions -->
        <test-method status="PASS" signature="emptyLoginFieldsTest()[pri:0, instance:test.loginTests@523884b2]" name="emptyLoginFieldsTest" duration-ms="477" started-at="2020-02-20T08:41:16Z" finished-at="2020-02-20T08:41:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyLoginFieldsTest -->
        <test-method status="PASS" signature="wrongLoginTest(java.lang.String, java.lang.String)[pri:1, instance:test.loginTests@523884b2]" name="wrongLoginTest" duration-ms="516" started-at="2020-02-20T08:41:17Z" finished-at="2020-02-20T08:41:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[qwerty]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qwerty]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongLoginTest -->
        <test-method status="PASS" signature="adminLoginTest(java.lang.String, java.lang.String)[pri:2, instance:test.loginTests@523884b2]" name="adminLoginTest" duration-ms="1108" started-at="2020-02-20T08:41:17Z" finished-at="2020-02-20T08:41:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[adminadmin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminLoginTest -->
        <test-method status="PASS" signature="userLoginTest(java.lang.String, java.lang.String)[pri:3, instance:test.loginTests@523884b2]" name="userLoginTest" duration-ms="1072" started-at="2020-02-20T08:41:19Z" finished-at="2020-02-20T08:41:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[useruser]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTest -->
        <test-method status="PASS" signature="after()[pri:0, instance:test.loginTests@523884b2]" name="after" is-config="true" duration-ms="116" started-at="2020-02-20T08:41:20Z" finished-at="2020-02-20T08:41:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- test.loginTests -->
    </test> <!-- loginTests -->
    <test name="brokenLinks" duration-ms="4527" started-at="2020-02-20T08:41:20Z" finished-at="2020-02-20T08:41:24Z">
      <class name="test.BrokenLinksTest">
        <test-method status="PASS" signature="preconitions()[pri:0, instance:test.BrokenLinksTest@204f30ec]" name="preconitions" is-config="true" duration-ms="12" started-at="2020-02-20T08:41:20Z" finished-at="2020-02-20T08:41:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preconitions -->
        <test-method status="PASS" signature="login(java.lang.String, java.lang.String)[pri:0, instance:test.BrokenLinksTest@204f30ec]" name="login" is-config="true" duration-ms="276" started-at="2020-02-20T08:41:20Z" finished-at="2020-02-20T08:41:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[adminadmin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="brokeButtonsTest()[pri:0, instance:test.BrokenLinksTest@204f30ec]" name="brokeButtonsTest" duration-ms="2153" started-at="2020-02-20T08:41:20Z" finished-at="2020-02-20T08:41:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- brokeButtonsTest -->
        <test-method status="PASS" signature="brokenLinksTest()[pri:1, instance:test.BrokenLinksTest@204f30ec]" name="brokenLinksTest" duration-ms="1951" started-at="2020-02-20T08:41:22Z" finished-at="2020-02-20T08:41:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- brokenLinksTest -->
        <test-method status="PASS" signature="logout()[pri:0, instance:test.BrokenLinksTest@204f30ec]" name="logout" is-config="true" duration-ms="120" started-at="2020-02-20T08:41:24Z" finished-at="2020-02-20T08:41:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- test.BrokenLinksTest -->
    </test> <!-- brokenLinks -->
    <test name="newGroupTests" duration-ms="5642" started-at="2020-02-20T08:41:24Z" finished-at="2020-02-20T08:41:30Z">
      <class name="test.NewGroupTests">
        <test-method status="PASS" signature="preconitions()[pri:0, instance:test.NewGroupTests@57fffcd7]" name="preconitions" is-config="true" duration-ms="4" started-at="2020-02-20T08:41:24Z" finished-at="2020-02-20T08:41:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preconitions -->
        <test-method status="PASS" signature="login(java.lang.String, java.lang.String)[pri:0, instance:test.NewGroupTests@57fffcd7]" name="login" is-config="true" duration-ms="261" started-at="2020-02-20T08:41:24Z" finished-at="2020-02-20T08:41:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[adminadmin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="navigateToNewGroupPage()[pri:0, instance:test.NewGroupTests@57fffcd7]" name="navigateToNewGroupPage" is-config="true" duration-ms="767" started-at="2020-02-20T08:41:25Z" finished-at="2020-02-20T08:41:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToNewGroupPage -->
        <test-method status="PASS" signature="createGroupTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.NewGroupTests@57fffcd7]" name="createGroupTest" duration-ms="1962" started-at="2020-02-20T08:41:25Z" finished-at="2020-02-20T08:41:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Project managers]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Project managers who manage projects that need managing by the managers.]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Resignation letter]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createGroupTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.NewGroupTests@57fffcd7]" name="afterTest" is-config="true" duration-ms="203" started-at="2020-02-20T08:41:27Z" finished-at="2020-02-20T08:41:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="navigateToNewGroupPage()[pri:0, instance:test.NewGroupTests@57fffcd7]" name="navigateToNewGroupPage" is-config="true" duration-ms="272" started-at="2020-02-20T08:41:28Z" finished-at="2020-02-20T08:41:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToNewGroupPage -->
        <test-method status="PASS" signature="groupWithoutNameTest()[pri:1, instance:test.NewGroupTests@57fffcd7]" name="groupWithoutNameTest" duration-ms="430" started-at="2020-02-20T08:41:28Z" finished-at="2020-02-20T08:41:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- groupWithoutNameTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.NewGroupTests@57fffcd7]" name="afterTest" is-config="true" duration-ms="240" started-at="2020-02-20T08:41:28Z" finished-at="2020-02-20T08:41:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="navigateToNewGroupPage()[pri:0, instance:test.NewGroupTests@57fffcd7]" name="navigateToNewGroupPage" is-config="true" duration-ms="278" started-at="2020-02-20T08:41:28Z" finished-at="2020-02-20T08:41:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToNewGroupPage -->
        <test-method status="PASS" signature="userInGroupTest(java.lang.String, java.lang.String)[pri:2, instance:test.NewGroupTests@57fffcd7]" name="userInGroupTest" duration-ms="869" started-at="2020-02-20T08:41:29Z" finished-at="2020-02-20T08:41:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Project managers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userInGroupTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.NewGroupTests@57fffcd7]" name="afterTest" is-config="true" duration-ms="232" started-at="2020-02-20T08:41:30Z" finished-at="2020-02-20T08:41:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="logout()[pri:0, instance:test.NewGroupTests@57fffcd7]" name="logout" is-config="true" duration-ms="120" started-at="2020-02-20T08:41:30Z" finished-at="2020-02-20T08:41:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- test.NewGroupTests -->
    </test> <!-- newGroupTests -->
    <test name="newDocTypeTests" duration-ms="2880" started-at="2020-02-20T08:41:30Z" finished-at="2020-02-20T08:41:33Z">
      <class name="test.NewDocTypeTests">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:test.NewDocTypeTests@589838eb]" name="beforeSuite" is-config="true" duration-ms="10944" started-at="2020-02-20T08:41:05Z" finished-at="2020-02-20T08:41:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="preconitions()[pri:0, instance:test.NewDocTypeTests@589838eb]" name="preconitions" is-config="true" duration-ms="8" started-at="2020-02-20T08:41:30Z" finished-at="2020-02-20T08:41:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preconitions -->
        <test-method status="PASS" signature="login(java.lang.String, java.lang.String)[pri:0, instance:test.NewDocTypeTests@589838eb]" name="login" is-config="true" duration-ms="272" started-at="2020-02-20T08:41:30Z" finished-at="2020-02-20T08:41:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[adminadmin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="createNewDocTypeTest(java.lang.String, java.lang.String)[pri:0, instance:test.NewDocTypeTests@589838eb]" name="createNewDocTypeTest" duration-ms="1814" started-at="2020-02-20T08:41:30Z" finished-at="2020-02-20T08:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Resignation letter]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Project managers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewDocTypeTest -->
        <test-method status="PASS" signature="docTypeNoNameTest()[pri:1, instance:test.NewDocTypeTests@589838eb]" name="docTypeNoNameTest" duration-ms="466" started-at="2020-02-20T08:41:32Z" finished-at="2020-02-20T08:41:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- docTypeNoNameTest -->
        <test-method status="PASS" signature="docTypeGroupsTest(java.lang.String)[pri:2, instance:test.NewDocTypeTests@589838eb]" name="docTypeGroupsTest" duration-ms="216" started-at="2020-02-20T08:41:33Z" finished-at="2020-02-20T08:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Resignation letter]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- docTypeGroupsTest -->
        <test-method status="PASS" signature="logout()[pri:0, instance:test.NewDocTypeTests@589838eb]" name="logout" is-config="true" duration-ms="100" started-at="2020-02-20T08:41:33Z" finished-at="2020-02-20T08:41:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:test.NewDocTypeTests@589838eb]" name="afterSuite" is-config="true" duration-ms="814" started-at="2020-02-20T08:41:33Z" finished-at="2020-02-20T08:41:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.NewDocTypeTests -->
    </test> <!-- newDocTypeTests -->
  </suite> <!-- regressionTests -->
</testng-results>
